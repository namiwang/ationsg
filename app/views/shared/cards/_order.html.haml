- order_token = SecureRandom.hex(10)
.order-card.panel.panel-default
  .panel-heading
    .panel-title
      %a{"data-parent" => ".order-cards", "data-toggle" => "collapse", href: "#order-card-#{order_token}"}
        %i.fa.fa-caret-square-o-down
          = to_sg_dollar order.cart[:total_price]
          ,
          = t 'common.time.created_at'
          = t 'common.time.ago', time: ( time_ago_in_words (Time.now - order.created_at).seconds.from_now )
  .panel-collapse.collapse{id: "order-card-#{order_token}", class: ('in' if collapse_in)}
    .panel-body
      .row
        .col-md-5
          %dl.dl-horizontal
            %dt= t 'orders.card.recipient_info'
            - if order.transport
              %dd= Transport.human_attribute_name 'recipient_name'
              %dd= order.transport.recipient_name
              %dd= Transport.human_attribute_name 'recipient_address'
              %dd= order.transport.recipient_address
              %dd= Transport.human_attribute_name 'recipient_phone'
              %dd= order.transport.recipient_phone

            %dt= Order.human_attribute_name 'customer_message'
            %dd= order.customer_message

            %dt= t 'orders.card.payment_state'
            %dd
              / TODO currently only handle situations where one order got only one payment
              - payment = order.payments.last
              = locale_state 'payment', payment.aasm_state
            - if payment.may_pay? and action_name != 'pay'
              %dd= link_to (t 'orders.new.pay'), (pay_order_path order), class: 'btn btn-default btn-sm'

            %dt= t 'orders.card.transport_state'
            %dd= locale_state 'transport', order.transport.aasm_state #TODO

        .col-md-7
          %table.table.table-hover
            %tbody
              - order.cart[:items].each do |i|
                %tr
                  - case i[:type]
                  - when 'product'
                    %td.cover
                      .cover{style: "background-image: url(#{background_image_url i[:product].cover})"}
                    %td.name= i[:product].name
                    %td.price= to_sg_dollar i[:price]
                    %td.other
            %tfoot
              %tr
                %td
                %td
                %td.price= to_sg_dollar order.cart[:total_price]
                %td
